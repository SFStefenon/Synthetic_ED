'''
Algorithm wrote by Stefano Frizzo Stefenon
Fondazione Bruno Kessler
Trento, Italy, June 06, 2024.
'''
import torch
import cv2
from numpy import asarray
import glob
import os

# Clean the processing folder
for i in range(0,133):
    try:
        os.mkdir('./inputdata/synthetic_cdiffusion/'+str(i))
        for f in glob.glob("./inputdata/synthetic_cdiffusion/"+str(i)+"/i*.jpg"):
            os.remove(f)
    except:
        pass
print('Cleaned Folders')

exp = 0
show = False
classes = 10

# Images generated by diffusion
fake_images = torch.load('./saved_results/' + str(exp) + '/R_fake_ep4999_w2.0.pt', map_location=torch.device('cpu'))

i = 0; s_class = 0
for images in fake_images:
    images_a = asarray(images)

    if show == True:
        cv2.imshow("Img", images_a[0]*255)
        cv2.waitKey(500)

    # Save image by image (i) given the its class (s_class)
    filename: str = './inputdata/synthetic_cdiffusion/' + str(i+(exp*classes)) + '/image_' +  str(i) + '_' + str(s_class) + '.jpg'
    cv2.imwrite(filename, images_a[0]*255)

    # Start counting
    i += 1
    if i==classes:
        i = 0; s_class += 1

cv2.destroyAllWindows()
